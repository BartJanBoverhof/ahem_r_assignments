gamma <- 1 / scale
lambda <- exp(-l_OS_mito$loglogistic$intercept / scale)
p_S_16_logl <- 1 / (1 + lambda * t ^ gamma)
# Combine and display results
v_survival_props <- round(c(p_S_16_exp, p_S_16_weibull, p_S_16_logn, p_S_16_logl), 4)
names(v_survival_props) <- c("exponential", "weibull", "lognormal", "loglogistic")
v_survival_props
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
m_cholesky_exponential
l_cholesky_weibull[[i]]     <- (l_results_all[[i]]$weibull$cholesky)
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Print the values needed for the Cholesky decomposition matrix
m_cholesky_exponential
rev(l_cholesky_weibull)
rev(l_cholesky_lognormal)
rev(l_cholesky_loglogistic)
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
m_cholesky_exponential
l_cholesky_weibull[[i]]     <- (l_results_all[[i]]$weibull$cholesky)
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Print the values needed for the Cholesky decomposition matrix
m_cholesky_exponential
rev(l_cholesky_weibull)
rev(l_cholesky_lognormal)
rev(l_cholesky_loglogistic)
library(openxlsx)
wb <- createWorkbook("AHEM student")
addWorksheet(wb, "OS mito",  gridLines = FALSE, tabColour = "skyblue4")
addWorksheet(wb, "OS caba",  gridLines = FALSE, tabColour = "skyblue")
addWorksheet(wb, "PFS mito", gridLines = FALSE, tabColour = "coral3")
addWorksheet(wb, "PFS caba", gridLines = FALSE, tabColour = "coral")
for (i in v_names_data) {
print(i)
print(l_results_all[[i]]$summary)
writeData(wb, sheet = i, x = l_results_all[[i]]$summary, rowNames = TRUE)
}
saveWorkbook(wb, "output/output_parametric_survival_model_parameters.xlsx", overwrite = TRUE)
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
m_cholesky_exponential
l_cholesky_weibull[[i]]     <- (l_results_all[[i]]$weibull$cholesky)
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Load the openxlsx package
library(openxlsx)
# Initialize workbook
wb <- createWorkbook("AHEM student")
# Define sheet names and colors
sheet_names <- c("OS mito", "OS caba", "PFS mito", "PFS caba")
sheet_colors <- c("skyblue4", "skyblue", "coral3", "coral")
# Add worksheets with custom names and colors
for (i in seq_along(sheet_names)) {
addWorksheet(wb, sheet_names[i], gridLines = FALSE, tabColour = sheet_colors[i])
}
# Write Cholesky decomposition matrices into the workbook
for (i in seq_along(v_names_data)) {
# Current variable name
var_name <- v_names_data[i]
# Extract Cholesky matrices for each model
cholesky_exponential <- m_cholesky_exponential[, var_name, drop = FALSE]
cholesky_weibull <- l_cholesky_weibull[[var_name]]
cholesky_lognormal <- l_cholesky_lognormal[[var_name]]
cholesky_loglogistic <- l_cholesky_loglogistic[[var_name]]
# Prepare a summary table for the sheet
summary_table <- list(
"Exponential" = cholesky_exponential,
"Weibull" = cholesky_weibull,
"Lognormal" = cholesky_lognormal,
"Loglogistic" = cholesky_loglogistic
)
# Combine all tables into a cohesive data frame for Excel
combined_table <- do.call(cbind, summary_table)
# Write to the respective worksheet
writeData(wb, sheet = var_name, x = combined_table, rowNames = TRUE)
}
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
m_cholesky_exponential
l_cholesky_weibull[[i]]     <- (l_results_all[[i]]$weibull$cholesky)
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Load the openxlsx package
library(openxlsx)
# Initialize workbook
wb <- createWorkbook("AHEM student")
# Define sheet names and colors
sheet_names <- c("OS mito", "OS caba", "PFS mito", "PFS caba")
sheet_colors <- c("skyblue4", "skyblue", "coral3", "coral")
# Add worksheets with custom names and colors
for (i in seq_along(sheet_names)) {
addWorksheet(wb, sheet_names[i], gridLines = FALSE, tabColour = sheet_colors[i])
}
# Write Cholesky decomposition matrices into the workbook
for (i in seq_along(v_names_data)) {
# Current variable name
var_name <- v_names_data[i]
# Extract Cholesky matrices for each model
cholesky_exponential <- m_cholesky_exponential[, var_name, drop = FALSE]
cholesky_weibull <- l_cholesky_weibull[[var_name]]
cholesky_lognormal <- l_cholesky_lognormal[[var_name]]
cholesky_loglogistic <- l_cholesky_loglogistic[[var_name]]
# Prepare a summary table for the sheet
summary_table <- list(
"Exponential" = cholesky_exponential,
"Weibull" = cholesky_weibull,
"Lognormal" = cholesky_lognormal,
"Loglogistic" = cholesky_loglogistic
)
# Combine all tables into a cohesive data frame for Excel
combined_table <- do.call(cbind, summary_table)
# Write to the respective worksheet
writeData(wb, sheet = var_name, x = combined_table, rowNames = TRUE)
}
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
m_cholesky_exponential
l_cholesky_weibull[[i]]     <- (l_results_all[[i]]$weibull$cholesky)
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Print the values needed for the Cholesky decomposition matrix
m_cholesky_exponential
rev(l_cholesky_weibull)
rev(l_cholesky_lognormal)
rev(l_cholesky_loglogistic)
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
m_cholesky_exponential
l_cholesky_weibull[[i]]     <- (l_results_all[[i]]$weibull$cholesky)
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
m_cholesky_exponential
m_cholesky_exponential
l_cholesky_weibull
l_cholesky_lognormal
# Print the values needed for the Cholesky decomposition matrix
m_cholesky_exponential
rev(l_cholesky_weibull)
rev(l_cholesky_lognormal)
rev(l_cholesky_loglogistic)
# Initialize workbook
wb <- createWorkbook("AHEM student")
# Initialize workbook
wb_2 <- createWorkbook("AHEM student")
v_names_data
v_names_dist
print(i)
# Print the values needed for the Cholesky decomposition matrix
cholensky <- list(m_cholesky_exponential, rev(l_cholesky_weibull), rev(l_cholesky_lognormal), rev(l_cholesky_loglogistic))
cholensky
# With this line of code you get all the AIC values printed, as well as stored in an wb
for(i in v_names_dist){
print(i)
print(cholensky[[i]])
writeData(wb, sheet = i, x = cholensky,rowNames = TRUE) # save the data in the corresponding worksheet
}
v_names_dist
# Initialize workbook
wb_2 <- createWorkbook("AHEM student")
# Define sheet names and colors
addWorksheet(wb_2, "exponential", gridLines = FALSE, tabColour = "skyblue4")
addWorksheet(wb_2, "weibull",     gridLines = FALSE, tabColour = "coral3")
addWorksheet(wb_2, "lognormal",   gridLines = FALSE, tabColour = "skyblue")
addWorksheet(wb_2, "loglogistic", gridLines = FALSE, tabColour = "coral")
# With this line of code you get all the AIC values printed, as well as stored in an wb
for(i in v_names_dist){
print(i)
print(cholensky[[i]])
writeData(wb, sheet = i, x = cholensky,rowNames = TRUE) # save the data in the corresponding worksheet
}
v_names_dist
# With this line of code you get all the AIC values printed, as well as stored in an wb
for(i in v_names_dist){
print(i)
print(cholensky[[i]])
writeData(wb_2, sheet = i, x = cholensky,rowNames = TRUE) # save the data in the corresponding worksheet
}
saveWorkbook(wb, "output_parametric_survival_model_parameters.xlsx", overwrite = TRUE) # export the workbook to a .xlsx file
# Save the workbook
saveWorkbook(wb_2, "output/output_cholensky.xlsx", overwrite = TRUE)
cholensky
v_names_dist
i="exponential"
print(i)
cholensky[[i]])
cholensky[[i]]
cholensky[[i]]
print(cholensky[i]
print(cholensky[i]
print(cholensky[i]
print(cholensky[i])
print(cholensky[i])
print(cholensky[i])
cholensky
m_cholesky_exponential
m_cholesky_exponential
l_cholesky_weibull
v_names_dist
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
l_cholesky_weibull[[i]]     <- (l_results_all[[i]]$weibull$cholesky)
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Print the values needed for the Cholesky decomposition matrix
cholensky <- list(m_cholesky_exponential, rev(l_cholesky_weibull), rev(l_cholesky_lognormal), rev(l_cholesky_loglogistic))
# Initialize workbook
wb_2 <- createWorkbook("AHEM student")
# Define sheet names and colors
addWorksheet(wb_2, "exponential", gridLines = FALSE, tabColour = "skyblue4")
addWorksheet(wb_2, "weibull",     gridLines = FALSE, tabColour = "coral3")
addWorksheet(wb_2, "lognormal",   gridLines = FALSE, tabColour = "skyblue")
addWorksheet(wb_2, "loglogistic", gridLines = FALSE, tabColour = "coral")
# With this line of code you get all the AIC values printed, as well as stored in an wb
writeData(wb_2, sheet = "exponential", x = m_cholesky_exponential,rowNames = TRUE) # save the data in the corresponding worksheet
writeData(wb_2, sheet = "weibull", x = l_cholesky_weibull,rowNames = TRUE) # save the data in the corresponding worksheet
writeData(wb_2, sheet = "lognormal", x = l_cholesky_lognormal,rowNames = TRUE) # save the data in the corresponding worksheet
writeData(wb_2, sheet = "loglogistic", x = l_cholesky_loglogistic,rowNames = TRUE) # save the data in the corresponding worksheet
# Save the workbook
saveWorkbook(wb_2, "output/output_cholensky.xlsx", overwrite = TRUE)
m_cholesky_exponential
l_cholesky_weibull
l_cholesky_weibull[[i]]     <- as.matrix((l_results_all[[i]]$weibull$cholesky))
l_cholesky_weibull
l_cholesky_weibull
l_cholesky_lognormal
l_cholesky_loglogistic
m_cholesky_exponential
l_cholesky_weibull
l_cholesky_lognormal
l_cholesky_loglogistic
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
l_cholesky_weibull[[i]]     <- as.matrix((l_results_all[[i]]$weibull$cholesky))
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Load necessary library
library(openxlsx)
# Initialize workbook
wb_2 <- createWorkbook("AHEM student")
# Define sheet names and colors
addWorksheet(wb_2, "exponential", gridLines = FALSE, tabColour = "skyblue4")
addWorksheet(wb_2, "weibull", gridLines = FALSE, tabColour = "coral3")
addWorksheet(wb_2, "lognormal", gridLines = FALSE, tabColour = "skyblue")
addWorksheet(wb_2, "loglogistic", gridLines = FALSE, tabColour = "coral")
# Save m_cholesky_exponential as matrix
writeData(wb_2, sheet = "exponential", x = m_cholesky_exponential, rowNames = TRUE)
# Save l_cholesky_weibull as separate matrices
weibull_data <- do.call(rbind, lapply(names(l_cholesky_weibull), function(name) {
cbind(Model = name, l_cholesky_weibull[[name]])
}))
writeData(wb_2, sheet = "weibull", x = weibull_data, rowNames = FALSE)
# Save l_cholesky_lognormal as separate matrices
lognormal_data <- do.call(rbind, lapply(names(l_cholesky_lognormal), function(name) {
cbind(Model = name, l_cholesky_lognormal[[name]])
}))
writeData(wb_2, sheet = "lognormal", x = lognormal_data, rowNames = FALSE)
# Save l_cholesky_loglogistic as separate matrices
loglogistic_data <- do.call(rbind, lapply(names(l_cholesky_loglogistic), function(name) {
cbind(Model = name, l_cholesky_loglogistic[[name]])
}))
writeData(wb_2, sheet = "loglogistic", x = loglogistic_data, rowNames = FALSE)
# Save the workbook
saveWorkbook(wb_2, "output/output_cholensky.xlsx", overwrite = TRUE)
# Save m_cholesky_exponential as matrix
writeData(wb_2, sheet = "exponential", x = m_cholesky_exponential, rowNames = TRUE)
# Save l_cholesky_weibull as separate matrices
weibull_data <- do.call(rbind, lapply(names(l_cholesky_weibull), function(name) {
cbind(Model = name, l_cholesky_weibull[[name]])
}))
weibull_data
loglogistic_data
loglogistic_data
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
l_cholesky_weibull[[i]]     <- as.matrix((l_results_all[[i]]$weibull$cholesky))
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Load necessary library
library(openxlsx)
# Initialize workbook
wb_2 <- createWorkbook("AHEM student")
# Define sheet names and colors
addWorksheet(wb_2, "exponential", gridLines = FALSE, tabColour = "skyblue4")
addWorksheet(wb_2, "weibull", gridLines = FALSE, tabColour = "coral3")
addWorksheet(wb_2, "lognormal", gridLines = FALSE, tabColour = "skyblue")
addWorksheet(wb_2, "loglogistic", gridLines = FALSE, tabColour = "coral")
# Save m_cholesky_exponential as matrix
writeData(wb_2, sheet = "exponential", x = m_cholesky_exponential, rowNames = TRUE)
# Save l_cholesky_weibull as separate matrices
weibull_data <- do.call(rbind, lapply(names(l_cholesky_weibull), function(name) {
cbind(Model = name, l_cholesky_weibull[[name]])
}))
writeData(wb_2, sheet = "weibull", x = weibull_data, rowNames = FALSE)
# Save l_cholesky_lognormal as separate matrices
lognormal_data <- do.call(rbind, lapply(names(l_cholesky_lognormal), function(name) {
cbind(Model = name, l_cholesky_lognormal[[name]])
}))
writeData(wb_2, sheet = "lognormal", x = lognormal_data, rowNames = FALSE)
# Save l_cholesky_loglogistic as separate matrices
loglogistic_data <- do.call(rbind, lapply(names(l_cholesky_loglogistic), function(name) {
cbind(Model = name, l_cholesky_loglogistic[[name]])
}))
writeData(wb_2, sheet = "loglogistic", x = loglogistic_data, rowNames = FALSE)
# Save the workbook
saveWorkbook(wb_2, "output/output_cholensky.xlsx", overwrite = TRUE)
weibull_data
type(weibull_data)
str(weibull_data)
as.matrix(weibull_data)
as.matrix(weibull_data)
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
l_cholesky_weibull[[i]]     <- as.matrix((l_results_all[[i]]$weibull$cholesky))
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Load necessary library
library(openxlsx)
# Initialize workbook
wb_2 <- createWorkbook("AHEM student")
# Define sheet names and colors
addWorksheet(wb_2, "exponential", gridLines = FALSE, tabColour = "skyblue4")
addWorksheet(wb_2, "weibull", gridLines = FALSE, tabColour = "coral3")
addWorksheet(wb_2, "lognormal", gridLines = FALSE, tabColour = "skyblue")
addWorksheet(wb_2, "loglogistic", gridLines = FALSE, tabColour = "coral")
# Save m_cholesky_exponential as matrix
writeData(wb_2, sheet = "exponential", x = m_cholesky_exponential, rowNames = TRUE)
# Save l_cholesky_weibull as separate matrices
weibull_data <- do.call(rbind, lapply(names(l_cholesky_weibull), function(name) {
cbind(Model = name, l_cholesky_weibull[[name]])
}))
writeData(wb_2, sheet = "weibull", x = as.matrix(weibull_data), rowNames = FALSE)
# Save l_cholesky_lognormal as separate matrices
lognormal_data <- do.call(rbind, lapply(names(l_cholesky_lognormal), function(name) {
cbind(Model = name, l_cholesky_lognormal[[name]])
}))
writeData(wb_2, sheet = "lognormal", x = lognormal_data, rowNames = FALSE)
# Save l_cholesky_loglogistic as separate matrices
loglogistic_data <- do.call(rbind, lapply(names(l_cholesky_loglogistic), function(name) {
cbind(Model = name, l_cholesky_loglogistic[[name]])
}))
writeData(wb_2, sheet = "loglogistic", x = loglogistic_data, rowNames = FALSE)
# Save the workbook
saveWorkbook(wb_2, "output/output_cholensky.xlsx", overwrite = TRUE)
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
l_cholesky_weibull[[i]]     <- as.matrix((l_results_all[[i]]$weibull$cholesky))
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Load necessary library
library(openxlsx)
# Initialize workbook
wb_2 <- createWorkbook("AHEM student")
# Add worksheets with colors
addWorksheet(wb_2, "exponential", gridLines = FALSE, tabColour = "skyblue4")
addWorksheet(wb_2, "weibull", gridLines = FALSE, tabColour = "coral3")
addWorksheet(wb_2, "lognormal", gridLines = FALSE, tabColour = "skyblue")
addWorksheet(wb_2, "loglogistic", gridLines = FALSE, tabColour = "coral")
# Write m_cholesky_exponential directly
writeData(wb_2, sheet = "exponential", x = m_cholesky_exponential, rowNames = TRUE)
# Write l_cholesky_weibull with labels
startRow <- 1
for (name in names(l_cholesky_weibull)) {
writeData(wb_2, sheet = "weibull", x = paste("Model:", name), startRow = startRow, startCol = 1)
writeData(wb_2, sheet = "weibull", x = l_cholesky_weibull[[name]], startRow = startRow + 1, rowNames = TRUE)
startRow <- startRow + nrow(l_cholesky_weibull[[name]]) + 3
}
# Write l_cholesky_lognormal with labels
startRow <- 1
for (name in names(l_cholesky_lognormal)) {
writeData(wb_2, sheet = "lognormal", x = paste("Model:", name), startRow = startRow, startCol = 1)
writeData(wb_2, sheet = "lognormal", x = l_cholesky_lognormal[[name]], startRow = startRow + 1, rowNames = TRUE)
startRow <- startRow + nrow(l_cholesky_lognormal[[name]]) + 3
}
# Write l_cholesky_loglogistic with labels
startRow <- 1
for (name in names(l_cholesky_loglogistic)) {
writeData(wb_2, sheet = "loglogistic", x = paste("Model:", name), startRow = startRow, startCol = 1)
writeData(wb_2, sheet = "loglogistic", x = l_cholesky_loglogistic[[name]], startRow = startRow + 1, rowNames = TRUE)
startRow <- startRow + nrow(l_cholesky_loglogistic[[name]]) + 3
}
# Save the workbook
saveWorkbook(wb_2, "output/output_cholensky_fixed.xlsx", overwrite = TRUE)
m_cholesky_exponential <- matrix(NA, nrow = 1, ncol = 4,
dimnames = list("exponential",
rev(v_names_data)))
# Create a list for the cholesky matrix
l_cholesky_weibull <- l_cholesky_lognormal <- l_cholesky_loglogistic <- list()
# Create table for the Cholesky matrices
for (i in v_names_data){
m_cholesky_exponential[, i] <- (l_results_all[[i]]$exponential$cholesky)
l_cholesky_weibull[[i]]     <- as.matrix((l_results_all[[i]]$weibull$cholesky))
l_cholesky_lognormal[[i]]   <- (l_results_all[[i]]$lognormal$cholesky)
l_cholesky_loglogistic[[i]] <- (l_results_all[[i]]$loglogistic$cholesky)
}
# Load necessary library
library(openxlsx)
# Initialize workbook
wb_2 <- createWorkbook("AHEM student")
# Add worksheets with colors
addWorksheet(wb_2, "exponential", gridLines = FALSE, tabColour = "skyblue4")
addWorksheet(wb_2, "weibull", gridLines = FALSE, tabColour = "coral3")
addWorksheet(wb_2, "lognormal", gridLines = FALSE, tabColour = "skyblue")
addWorksheet(wb_2, "loglogistic", gridLines = FALSE, tabColour = "coral")
# Write m_cholesky_exponential directly
writeData(wb_2, sheet = "exponential", x = m_cholesky_exponential, rowNames = TRUE)
# Define the fixed order
fixed_order <- c("PFS caba", "PFS mito", "OS caba", "OS mito")
# Write l_cholesky_weibull in the fixed order
startRow <- 1
for (name in fixed_order) {
if (name %in% names(l_cholesky_weibull)) {
writeData(wb_2, sheet = "weibull", x = paste("Model:", name), startRow = startRow, startCol = 1)
writeData(wb_2, sheet = "weibull", x = l_cholesky_weibull[[name]], startRow = startRow + 1, rowNames = TRUE)
startRow <- startRow + nrow(l_cholesky_weibull[[name]]) + 3
}
}
# Write l_cholesky_lognormal in the fixed order
startRow <- 1
for (name in fixed_order) {
if (name %in% names(l_cholesky_lognormal)) {
writeData(wb_2, sheet = "lognormal", x = paste("Model:", name), startRow = startRow, startCol = 1)
writeData(wb_2, sheet = "lognormal", x = l_cholesky_lognormal[[name]], startRow = startRow + 1, rowNames = TRUE)
startRow <- startRow + nrow(l_cholesky_lognormal[[name]]) + 3
}
}
# Write l_cholesky_loglogistic in the fixed order
startRow <- 1
for (name in fixed_order) {
if (name %in% names(l_cholesky_loglogistic)) {
writeData(wb_2, sheet = "loglogistic", x = paste("Model:", name), startRow = startRow, startCol = 1)
writeData(wb_2, sheet = "loglogistic", x = l_cholesky_loglogistic[[name]], startRow = startRow + 1, rowNames = TRUE)
startRow <- startRow + nrow(l_cholesky_loglogistic[[name]]) + 3
}
}
# Save the workbook
saveWorkbook(wb_2, "output/output_cholensky.xlsx", overwrite = TRUE)
l_cholesky_weibull
